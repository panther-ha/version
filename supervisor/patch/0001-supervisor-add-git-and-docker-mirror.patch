From c1cf8fcffe281cf81b09dbec6857ee1728ac1e73 Mon Sep 17 00:00:00 2001
From: yplam <yplam@yplam.com>
Date: Sun, 16 Mar 2025 19:07:28 +0800
Subject: [PATCH] supervisor add git and docker mirror

---
 supervisor/const.py            |  6 ++--
 supervisor/docker/interface.py | 34 +++++++++++++++++++----
 supervisor/store/git.py        | 50 +++++++++++++++++++++++-----------
 supervisor/store/validate.py   |  4 +++
 supervisor/updater.py          | 16 +++++++++++
 supervisor/validate.py         |  4 +++
 6 files changed, 91 insertions(+), 23 deletions(-)

diff --git a/supervisor/const.py b/supervisor/const.py
index 4bfde290..e67bfc8b 100644
--- a/supervisor/const.py
+++ b/supervisor/const.py
@@ -13,8 +13,8 @@ SUPERVISOR_VERSION = "9999.09.9.dev9999"
 SERVER_SOFTWARE = f"HomeAssistantSupervisor/{SUPERVISOR_VERSION} aiohttp/{aiohttpversion} Python/{systemversion[0]}.{systemversion[1]}"
 
 URL_HASSIO_ADDONS = "https://github.com/home-assistant/addons"
-URL_HASSIO_APPARMOR = "https://version.home-assistant.io/apparmor_{channel}.txt"
-URL_HASSIO_VERSION = "https://version.home-assistant.io/{channel}.json"
+URL_HASSIO_APPARMOR = "https://version.pantherha.com/apparmor_{channel}.txt"
+URL_HASSIO_VERSION = "https://version.pantherha.com/{channel}.json"
 
 SUPERVISOR_DATA = Path("/data")
 
@@ -166,6 +166,7 @@ ATTR_DISPLAYNAME = "displayname"
 ATTR_DNS = "dns"
 ATTR_DOCKER = "docker"
 ATTR_DOCKER_API = "docker_api"
+ATTR_DOCKER_MIRROR = "docker_mirror"
 ATTR_DOCUMENTATION = "documentation"
 ATTR_DOMAINS = "domains"
 ATTR_ENABLE = "enable"
@@ -183,6 +184,7 @@ ATTR_FREQUENCY = "frequency"
 ATTR_FULL_ACCESS = "full_access"
 ATTR_GATEWAY = "gateway"
 ATTR_GPIO = "gpio"
+ATTR_GITHUB_MIRROR = "github_mirror"
 ATTR_HASSIO_API = "hassio_api"
 ATTR_HASSIO_ROLE = "hassio_role"
 ATTR_HASSOS = "hassos"
diff --git a/supervisor/docker/interface.py b/supervisor/docker/interface.py
index 6c8c843d..1d814ed5 100644
--- a/supervisor/docker/interface.py
+++ b/supervisor/docker/interface.py
@@ -239,11 +239,35 @@ class DockerInterface(JobGroup):
                 await self._docker_login(image)
 
             # Pull new image
-            docker_image = await self.sys_run_in_executor(
-                self.sys_docker.images.pull,
-                f"{image}:{version!s}",
-                platform=MAP_ARCH[arch],
-            )
+            error_to_raise = None
+            image_urls = []
+
+            if self.coresys.updater.docker_mirror is not None:
+                for k, v in self.coresys.updater.docker_mirror.items():
+                    if image == k:
+                        _LOGGER.info("Use mirror: %s", v)
+                        image_urls.append(v)
+
+            image_urls.append(image)
+
+            for image_url in image_urls:
+                try:
+                    docker_image = await self.sys_run_in_executor(
+                        self.sys_docker.images.pull,
+                        f"{image_url}:{version!s}",
+                        platform=MAP_ARCH[arch],
+                    )
+                    if image_url != image:
+                        await self.sys_run_in_executor(
+                            docker_image.tag, image, tag=f"{version!s}"
+                        )
+                    error_to_raise = None
+                    break
+                except Exception as err:
+                    error_to_raise = err
+
+            if error_to_raise is not None:
+                raise error_to_raise
 
             # Validate content
             try:
diff --git a/supervisor/store/git.py b/supervisor/store/git.py
index 6841e682..f5353e5f 100644
--- a/supervisor/store/git.py
+++ b/supervisor/store/git.py
@@ -96,24 +96,42 @@ class GitRepo(CoreSysAttributes):
                 if value is not None
             }
 
-            try:
-                _LOGGER.info(
-                    "Cloning add-on %s repository from %s", self.path, self.url
-                )
-                self.repo = await self.sys_run_in_executor(
-                    ft.partial(
-                        git.Repo.clone_from, self.url, str(self.path), **git_args
+            urls = []
+            if self.coresys.updater.github_mirror is not None:
+                for mirror in self.coresys.updater.github_mirror:
+                    _LOGGER.info("Using GitHub mirror: %s", mirror)
+                    urls.append(self.url.replace("github.com", mirror))
+
+            urls.append(self.url)
+
+            err_to_raise = None
+
+            for url in urls:
+                try:
+                    _LOGGER.info(
+                        "Cloning add-on %s repository from %s", self.path, url
                     )
-                )
+                    _LOGGER.info("Cloning add-on %s repository", self.url)
+                    self.repo = await self.sys_run_in_executor(
+                        ft.partial(
+                            git.Repo.clone_from, url, str(self.path), **git_args
+                        )
+                    )
+                    err_to_raise = None
+                    break
+
+                except (
+                    git.InvalidGitRepositoryError,
+                    git.NoSuchPathError,
+                    git.CommandError,
+                    UnicodeDecodeError,
+                ) as err:
+                    _LOGGER.error("Can't clone %s repository: %s.", self.url, err)
+                    err_to_raise = err
+
+            if err_to_raise is not None:
+                raise StoreGitCloneError() from err_to_raise
 
-            except (
-                git.InvalidGitRepositoryError,
-                git.NoSuchPathError,
-                git.CommandError,
-                UnicodeDecodeError,
-            ) as err:
-                _LOGGER.error("Can't clone %s repository: %s.", self.url, err)
-                raise StoreGitCloneError() from err
 
     @Job(
         name="git_repo_pull",
diff --git a/supervisor/store/validate.py b/supervisor/store/validate.py
index 7582b982..0e78156c 100644
--- a/supervisor/store/validate.py
+++ b/supervisor/store/validate.py
@@ -9,12 +9,16 @@ from .const import StoreType
 URL_COMMUNITY_ADDONS = "https://github.com/hassio-addons/repository"
 URL_ESPHOME = "https://github.com/esphome/home-assistant-addon"
 URL_MUSIC_ASSISTANT = "https://github.com/music-assistant/home-assistant-addon"
+URL_PANTHER_HA = "https://github.com/panther-ha/home-assistant-addon"
+URL_ZIGBEE2MQTT = "https://github.com/zigbee2mqtt/hassio-zigbee2mqtt"
 BUILTIN_REPOSITORIES = {
     StoreType.CORE,
     StoreType.LOCAL,
     URL_COMMUNITY_ADDONS,
     URL_ESPHOME,
     URL_MUSIC_ASSISTANT,
+    URL_PANTHER_HA,
+    URL_ZIGBEE2MQTT,
 }
 
 # pylint: disable=no-value-for-parameter
diff --git a/supervisor/updater.py b/supervisor/updater.py
index e9660e8d..01ed1ae2 100644
--- a/supervisor/updater.py
+++ b/supervisor/updater.py
@@ -7,6 +7,7 @@ import logging
 
 import aiohttp
 from awesomeversion import AwesomeVersion
+from typing import List, Dict
 
 from .bus import EventListener
 from .const import (
@@ -14,7 +15,9 @@ from .const import (
     ATTR_AUTO_UPDATE,
     ATTR_CHANNEL,
     ATTR_CLI,
+    ATTR_DOCKER_MIRROR,
     ATTR_DNS,
+    ATTR_GITHUB_MIRROR,
     ATTR_HASSOS,
     ATTR_HOMEASSISTANT,
     ATTR_IMAGE,
@@ -125,6 +128,16 @@ class Updater(FileConfiguration, CoreSysAttributes):
             arch=self.sys_arch.supervisor
         )
 
+    @property
+    def github_mirror(self) -> List[str] | None:
+        """Return OTA url for OS."""
+        return self._data.get(ATTR_GITHUB_MIRROR)
+
+    @property
+    def docker_mirror(self) -> Dict[str, str] | None:
+        """Return OTA url for OS."""
+        return self._data.get(ATTR_DOCKER_MIRROR)
+
     @property
     def image_cli(self) -> str | None:
         """Return image of CLI docker."""
@@ -305,6 +318,9 @@ class Updater(FileConfiguration, CoreSysAttributes):
             self._data[ATTR_IMAGE][ATTR_OBSERVER] = data["images"]["observer"]
             self._data[ATTR_IMAGE][ATTR_MULTICAST] = data["images"]["multicast"]
 
+            self._data[ATTR_GITHUB_MIRROR] = data["github_mirror"]
+            self._data[ATTR_DOCKER_MIRROR] = data["docker_mirror"]
+
         except KeyError as err:
             raise UpdaterError(
                 f"Can't process version data: {err}", _LOGGER.warning
diff --git a/supervisor/validate.py b/supervisor/validate.py
index b22a1b3e..3a3d3ffa 100644
--- a/supervisor/validate.py
+++ b/supervisor/validate.py
@@ -18,7 +18,9 @@ from .const import (
     ATTR_DIAGNOSTICS,
     ATTR_DISPLAYNAME,
     ATTR_DNS,
+    ATTR_DOCKER_MIRROR,
     ATTR_FORCE_SECURITY,
+    ATTR_GITHUB_MIRROR,
     ATTR_HASSOS,
     ATTR_HOMEASSISTANT,
     ATTR_ID,
@@ -142,6 +144,8 @@ SCHEMA_UPDATER_CONFIG = vol.Schema(
         ),
         vol.Optional(ATTR_OTA): vol.Url(),
         vol.Optional(ATTR_AUTO_UPDATE, default=True): bool,
+        vol.Optional(ATTR_GITHUB_MIRROR, default=[]): vol.Any(None, [str]),
+        vol.Optional(ATTR_DOCKER_MIRROR): vol.Any(None, {str: str}),
     },
     extra=vol.REMOVE_EXTRA,
 )
-- 
2.47.1

